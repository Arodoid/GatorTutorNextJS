# Docker Compose Configuration
# ---------------------------
# This file defines our application's services (like Lego pieces that make up our app):
# 1. db: Our MySQL database
# 2. web: Our Next.js application
#
# Think of it as a recipe that tells Docker how to run our application

services:
  # Database Service
  # ---------------
  # This runs MySQL to store all our app's data
  db:
    image: mysql:8.0 # Use MySQL version 8.0
    restart: unless-stopped # Automatically restart if it crashes
    environment: # Database settings (from .env file)
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes: # Save data even if container restarts
      - mysql_data:/var/lib/mysql
    ports: # Allow connections to database
      - "3306:3306" # Format: "computer-port:container-port"
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=128M
      --max-connections=10
      --performance-schema=OFF

  # Web Application Service
  # ----------------------
  # This runs our Next.js application
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: gatortutor-${NODE_ENV:-production}
    container_name: gatortutor-web-${NODE_ENV:-production}
    ports:
      - "80:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NODE_OPTIONS=--max_old_space_size=512
      - JWT_SECRET=${JWT_SECRET}
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
    depends_on:
      - db
    restart: unless-stopped
    stop_grace_period: 10s

# Persistent Storage
# -----------------
# Keep database data even when containers restart
volumes:
  mysql_data:
